# auto-generated by grc.converter

id: mesa_MaxPower
label: Max Power
category: '[mesa]'

parameters:
-   id: sampleRate
    label: Sample Rate
    dtype: float
    default: samp_rate
-   id: fft_size
    label: FFT Size
    dtype: int
    default: '1024'
-   id: squelchThreshold
    label: Squelch Threshold
    dtype: float
    default: '-80.0'
-   id: framesToAvg
    label: Frames to Avg
    dtype: int
    default: '6'
-   id: stateThreshold
    label: State Notify Threshold
    dtype: float
    default: '-65.0'
-   id: holdUpSec
    label: Detect Hold Time (s)
    dtype: float
    default: '10.0'
-   id: produceOut
    label: Produce Out Msg
    dtype: enum
    options: ['False', 'True']
    option_labels: ['No', 'Yes']

inputs:
-   domain: stream
    dtype: complex
    optional: true
-   domain: message
    id: msgin
    optional: true

outputs:
-   domain: message
    id: out
    optional: true
-   domain: message
    id: maxpower
    optional: true
-   domain: message
    id: state
    optional: true

templates:
    imports: import mesa
    make: mesa.MaxPower(${sampleRate}, ${fft_size}, ${squelchThreshold}, ${framesToAvg},
        ${produceOut},${stateThreshold}, ${holdUpSec})
    callbacks:
    - setSquelchThreshold(${squelchThreshold})
    - setStateThreshold(${stateThreshold})
    - setHoldTime(${holdUpSec})

documentation: |-
    This block monitors the input block for the maximum power seen.  This is output in a "maxpower" meta tag in the maxpower connector, and also output on the out port along with the data block.  For compatibility with the input selector block, a "decisionvalue" tag is also in the metadata that matches maxpower.

    The block can also be used to send a state (1/0) message if the detected power is above the specified notify threshold.

    NOTE: For performance purposes, if you don't need the full data stream, set 'Produce Out Msg' to No.

file_format: 1
